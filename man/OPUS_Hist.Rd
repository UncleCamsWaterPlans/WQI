% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eagleIO.R
\name{OPUS_Hist}
\alias{OPUS_Hist}
\title{Extract historic OPUS data from WQI's eagle.IO instance}
\source{
\url{https://wqi.eagle.io/}
}
\usage{
OPUS_Hist(APIKEY, NNO3, TSSeq, abs210, abs254, abs360, SQI, START)
}
\arguments{
\item{APIKEY}{This is required for all functions and can be generated from the account settings in WQI's Eagle.IO instance}

\item{NNO3}{A node ID for a given sites NNO3 parameter in eagle.IO.}

\item{TSSeq}{A node ID for a given sites TSSeq parameter in eagle.IO.}

\item{abs210}{A node ID for a given sites abs210 parameter in eagle.IO.}

\item{abs254}{A node ID for a given sites abs254 parameter in eagle.IO.}

\item{abs360}{A node ID for a given sites abs360 parameter in eagle.IO.}

\item{SQI}{A node ID for a given sites SQI parameter in eagle.IO.}

\item{START}{Number of days to lookback}
}
\value{
tibble containing returned historic data for OPUS reportable parameters and associsated spectral values, value and quality. Time as "Australia/Brisbane"
}
\description{
Function for extracting a tibble of historic OPUS data from WQI's eagle.IO instance. Requires a node ID that has connection status information to return (ie. Campbell pakbus logger)
}
\examples{
loggerRef <- WQI::loggerRef
site <- "1111019"
dex <- loggerRef \%>\%
  dplyr::filter(GSnum == site)

NNO3 <- dex$`OPUSResults - OPUS1000 N NO3`
TSSeq <- dex$`OPUSResults - OPUS1016 TSSeq`
abs210 <- dex$`OPUSResults - OPUS1036 Abs210`
abs254 <- dex$`OPUSResults - OPUS1042 Abs254`
abs360 <- dex$`OPUSResults - OPUS1034 Abs360`
SQI <- dex$`OPUSResults - OPUS1060 SQI`

}
